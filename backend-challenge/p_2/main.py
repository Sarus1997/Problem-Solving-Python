# สัญลักษณ์ “L” หมายความว่า ตัวเลขด้านซ้าย มีค่ามากกว่า ตัวเลขด้านขวา
# สัญลักษณ์ “R” หมายความว่า ตัวเลขด้านขวา มีค่ามากกว่า ตัวเลขด้านซ้าย
# สัญลักษณ์ “=“ หมายความว่า ตัวเลขด้านซ้าย มีค่าเท่ากับ ตัวเลขด้านขวา

# ตัวอย่างเช่น ตัวเลขชุด “410233“ จะเข้ารหัสได้เป็น “LLRR=“

# อธิบายเพิ่มเติม จากตัวเลขชุด “410233“

# เลขคู่แรกคือ 4 และ 1      => ตัวเลขซ้าย (4) มากกว่า ตัวเลขขวา (1)   => “L“
# เลขคู่ถัดมาคือ 1 และ 0   => ตัวเลขซ้าย (1) มากกว่า ตัวเลขขวา (0)   => “L“
# เลขคู่ถัดมาคือ 0 และ 2   => ตัวเลขซ้าย (0) น้อยกว่า ตัวเลขขวา (2)  => “R“
# เลขคู่ถัดมาคือ 2 และ 3   => ตัวเลขซ้าย (2) น้อยกว่า ตัวเลขขวา (3)  => “R“
# เลขคู่ถัดมาคือ 3 และ 3   => ตัวเลขซ้าย (3) เท่ากับ ตัวเลขขวา (3)  => “=“

# “LLRR=” สามารถแปลงได้เป็น “410233” หรือ “210122“ ก็ได้ 
# ผลรวมตัวเลขทุกตัวของ 410233 = 4 + 1 + 0 + 2+. 3 + 3 = 13
# ผลรวมตัวเลขทุกตัวของ 210122 = 2 + 1 + 0 + 1 + 2 + 2  = 8
# คำตอบคือ เลขชุด 210122 เนื่องจาก ผลรวมของทุกตัวเลขมีค่าน้อยที่สุด

def decode_sequence(sequence):
    decoded = [0]  # เริ่มต้นด้วย 0 เพื่อให้มีตัวเลขเริ่มต้น
    for symbol in sequence:
        if symbol == 'L':
            decoded.append(decoded[-1] + 1)
        elif symbol == 'R':
            decoded.append(decoded[-1] - 1)
        elif symbol == '=':
            decoded.append(decoded[-1])
    return decoded

def minimize_sum(sequence):
    decoded = decode_sequence(sequence)
    min_value = min(decoded)
    
    # ทำให้ตัวเลขทั้งหมดเป็นบวก
    if min_value < 0:
        decoded = [num - min_value for num in decoded]
    
    return decoded

sequence = "LLRR="
result = minimize_sum(sequence)
print("Decoded sequence:", result)
print("Sum of the sequence:", sum(result))